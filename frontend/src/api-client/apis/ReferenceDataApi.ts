/* tslint:disable */
/* eslint-disable */
/**
 * TicketTracking.Api | v1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  InstalledEnvironmentDto,
  PriorityDto,
  StatusDto,
  TicketTypeDto,
  UserDto,
} from '../models/index';
import {
    InstalledEnvironmentDtoFromJSON,
    InstalledEnvironmentDtoToJSON,
    PriorityDtoFromJSON,
    PriorityDtoToJSON,
    StatusDtoFromJSON,
    StatusDtoToJSON,
    TicketTypeDtoFromJSON,
    TicketTypeDtoToJSON,
    UserDtoFromJSON,
    UserDtoToJSON,
} from '../models/index';

/**
 * 
 */
export class ReferenceDataApi extends runtime.BaseAPI {

    /**
     */
    async apiReferenceDataInstalledEnvironmentsGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<InstalledEnvironmentDto>>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/ReferenceData/installed-environments`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(InstalledEnvironmentDtoFromJSON));
    }

    /**
     */
    async apiReferenceDataInstalledEnvironmentsGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<InstalledEnvironmentDto>> {
        const response = await this.apiReferenceDataInstalledEnvironmentsGetRaw(initOverrides);
        return await response.value();
    }

    /**
     */
    async apiReferenceDataPrioritiesGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<PriorityDto>>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/ReferenceData/priorities`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(PriorityDtoFromJSON));
    }

    /**
     */
    async apiReferenceDataPrioritiesGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<PriorityDto>> {
        const response = await this.apiReferenceDataPrioritiesGetRaw(initOverrides);
        return await response.value();
    }

    /**
     */
    async apiReferenceDataStatusesGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<StatusDto>>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/ReferenceData/statuses`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(StatusDtoFromJSON));
    }

    /**
     */
    async apiReferenceDataStatusesGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<StatusDto>> {
        const response = await this.apiReferenceDataStatusesGetRaw(initOverrides);
        return await response.value();
    }

    /**
     */
    async apiReferenceDataTypesGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<TicketTypeDto>>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/ReferenceData/types`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(TicketTypeDtoFromJSON));
    }

    /**
     */
    async apiReferenceDataTypesGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<TicketTypeDto>> {
        const response = await this.apiReferenceDataTypesGetRaw(initOverrides);
        return await response.value();
    }

    /**
     */
    async apiReferenceDataUsersGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<UserDto>>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/ReferenceData/users`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(UserDtoFromJSON));
    }

    /**
     */
    async apiReferenceDataUsersGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<UserDto>> {
        const response = await this.apiReferenceDataUsersGetRaw(initOverrides);
        return await response.value();
    }

}
