/* tslint:disable */
/* eslint-disable */
/**
 * TicketTracking.Api | v1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { TicketListItemDto } from './TicketListItemDto';
import {
    TicketListItemDtoFromJSON,
    TicketListItemDtoFromJSONTyped,
    TicketListItemDtoToJSON,
    TicketListItemDtoToJSONTyped,
} from './TicketListItemDto';

/**
 * 
 * @export
 * @interface PagedCollectionOfTicketListItemDto
 */
export interface PagedCollectionOfTicketListItemDto {
    /**
     * 
     * @type {Array<TicketListItemDto>}
     * @memberof PagedCollectionOfTicketListItemDto
     */
    items?: Array<TicketListItemDto>;
    /**
     * 
     * @type {number}
     * @memberof PagedCollectionOfTicketListItemDto
     */
    pageNumber?: number;
    /**
     * 
     * @type {number}
     * @memberof PagedCollectionOfTicketListItemDto
     */
    pageSize?: number;
    /**
     * 
     * @type {number}
     * @memberof PagedCollectionOfTicketListItemDto
     */
    totalCount?: number;
    /**
     * 
     * @type {number}
     * @memberof PagedCollectionOfTicketListItemDto
     */
    totalPages?: number;
}

/**
 * Check if a given object implements the PagedCollectionOfTicketListItemDto interface.
 */
export function instanceOfPagedCollectionOfTicketListItemDto(value: object): value is PagedCollectionOfTicketListItemDto {
    return true;
}

export function PagedCollectionOfTicketListItemDtoFromJSON(json: any): PagedCollectionOfTicketListItemDto {
    return PagedCollectionOfTicketListItemDtoFromJSONTyped(json, false);
}

export function PagedCollectionOfTicketListItemDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): PagedCollectionOfTicketListItemDto {
    if (json == null) {
        return json;
    }
    return {
        
        'items': json['items'] == null ? undefined : ((json['items'] as Array<any>).map(TicketListItemDtoFromJSON)),
        'pageNumber': json['pageNumber'] == null ? undefined : json['pageNumber'],
        'pageSize': json['pageSize'] == null ? undefined : json['pageSize'],
        'totalCount': json['totalCount'] == null ? undefined : json['totalCount'],
        'totalPages': json['totalPages'] == null ? undefined : json['totalPages'],
    };
}

export function PagedCollectionOfTicketListItemDtoToJSON(json: any): PagedCollectionOfTicketListItemDto {
    return PagedCollectionOfTicketListItemDtoToJSONTyped(json, false);
}

export function PagedCollectionOfTicketListItemDtoToJSONTyped(value?: PagedCollectionOfTicketListItemDto | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'items': value['items'] == null ? undefined : ((value['items'] as Array<any>).map(TicketListItemDtoToJSON)),
        'pageNumber': value['pageNumber'],
        'pageSize': value['pageSize'],
        'totalCount': value['totalCount'],
        'totalPages': value['totalPages'],
    };
}

